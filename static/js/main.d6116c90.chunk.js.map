{"version":3,"sources":["components/public/logo/danny_logo.png","components/Popup/Login/Login.js","components/Popup/Register/Register.js","components/Popup/TestPopup.js","components/Header/Header.js","api/index.js","components/Board/Board.js","components/Home/Home.js","components/Problems/Problems.js","components/Board/Contents/Board.js","components/Board/Contents/Problems/Problem.js","components/Board/Contents/SendPost/SendPost.js","components/contents/Contents.js","components/App/App.js","index.js"],"names":["module","exports","Login","props","useState","id","uId","setUId","pw","uPw","setUPw","updateToken","updated","username","className","type","value","placeholder","onChange","e","target","onClick","a","axios","url","method","data","res","console","log","status","alert","dat","cookies","save","token","rank","refresh","refreshToken","path","getLog","Register","setUsername","setUpw","uPwC","setUpwc","login","TestPopup","closePopup","idx","Header","src","logo","alt","href","load","hasToken","remove","press","obj","defaults","headers","common","interceptors","request","use","config","error","Promise","reject","response","err","orq","_retry","post","then","userdata","requestPost","cfg","catch","ret","requestGet","bol","Board","title","page","width","posts","setPosts","useEffect","Http","limit","rw","getData","length","map","p","key","name","Home","problems","currentPost","setCurrentPost","match","params","contents","writer","when","substring","dangerouslySetInnerHTML","__html","Problem","isCompleted","rwc","exam","example","toString","split","introduce","input","output","SendPost","txt","setTxt","info","setInfo","rows","cols","event","code","score","max","Contents","exact","component","Problems","App","showPopup","setShowPopup","setIdx","hasCookie","loginInfo","setLoginInfo","toggle","update","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById"],"mappings":"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","file":"static/js/main.d6116c90.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/danny_logo.97d4289a.png\";","import React, { useState } from 'react'\r\nimport './Login.scss'\r\nimport axios from 'axios'\r\nimport cookies from 'react-cookies'\r\n\r\nconst Login = (props)=>{\r\n\r\n    const [uId, setUId ] = useState({\r\n        id : ''\r\n    })\r\n    const [uPw, setUPw] = useState({\r\n        pw:''\r\n    })\r\n    \r\n    let updateToken = (updated, username)=>{\r\n        props.updateToken(updated, username)\r\n    }\r\n\r\n    let goLogin = () => {\r\n        async function getLog(){\r\n            const res = await axios({\r\n                url: 'http://danny-server.kro.kr:5000/user/login',\r\n                method: 'post',\r\n                data:{\r\n                    id: uId.id,\r\n                    pw: uPw.pw\r\n                }\r\n            })\r\n            console.log(res)\r\n            if(res.status === 201){\r\n                alert(res.data.data)\r\n            }\r\n            else if(res.status === 200){\r\n                let dat = res.data.data;\r\n                cookies.save('userdata',{\r\n                    id: uId.id,\r\n                    token: dat.token,\r\n                    username : dat.username,\r\n                    rank: dat.rank,\r\n                    refresh: dat.refreshToken\r\n                }, {path:'/'})\r\n                alert(\"로그인완료!\\n화면을 새로고침 해주세요!\")\r\n                updateToken(true, dat.username)\r\n            }\r\n        }\r\n        getLog()\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <h1>로그인</h1>\r\n            <form>\r\n                <input id=\"idbox\" type=\"text\" value={uId.id} placeholder=\"아이디\" onChange={e=>setUId({id: e.target.value})}></input>\r\n                <input id=\"pwbox\" type=\"password\" value={uPw.pw} placeholder=\"비밀번호\" onChange={e=>setUPw({pw: e.target.value})}></input>\r\n            </form>\r\n            <button id=\"login_btn\" onClick={goLogin}>로그인</button>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Login","import React, { useState } from 'react'\r\nimport './Register.scss'\r\nimport axios from 'axios'\r\nconst Register = (props)=>{\r\n    const [username, setUsername] = useState({\r\n        username: ''\r\n    })\r\n    const [uId, setUId] = useState({uId: ''})\r\n    const [uPw, setUpw] = useState({uPw: ''})\r\n    const [uPwC, setUpwc] = useState({uPwC: ''})\r\n\r\n    let login = async ()=>{\r\n        if(username.username ==='' || uId.uId === '' || uPw.uPw === '' || uPwC.uPwC == '' || (uPw.uPw != uPwC.uPwC)){\r\n            alert(\"이런 무언가 문제가 있어요! 비밀번호체크를 올바르게 입력했나요?\")\r\n        }else{\r\n            const res = await axios({\r\n                url: 'http://danny-server.kro.kr:5000/user/registerUser',\r\n                method: 'post',\r\n                data:{\r\n                    username: username.username,\r\n                    id: uId.uId,\r\n                    pw: uPw.uPw,\r\n                    rank: 0\r\n                }\r\n            })\r\n            console.log(res)\r\n            if(res.status === 201){\r\n                alert(res.data.data)\r\n            }\r\n            else if(res.status === 200){\r\n                alert(\"회원가입 완료!\\n로그인 해주시기 바랍니다!\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Register\">\r\n            <h1>회원가입</h1>\r\n            <form>\r\n                <input id=\"nameBox\" type=\"text\" placeholder=\"사용자명\" value={username.username} onChange={e=>setUsername({username: e.target.value})}></input>\r\n                <input id=\"idbox\" type=\"text\" placeholder=\"아이디\" value={uId.uId} onChange={e=>setUId({uId: e.target.value})}></input>\r\n                <input id=\"pwbox\" type=\"password\" placeholder=\"비밀번호\" value={uPw.uPw} onChange={e=>setUpw({uPw: e.target.value})}></input>\r\n                <input id=\"pwcheckbox\" type=\"password\" placeholder=\"비밀번호 확인\" value={uPwC.uPwC} onChange={e=>setUpwc({uPwC: e.target.value})}></input>\r\n            </form>\r\n            <button id=\"register_btn\" onClick={login}>회원가입</button>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Register","import React from 'react'\r\nimport './test.scss'\r\nimport Test from './Login/Login'\r\nimport Register from './Register/Register'\r\nconst TestPopup = (props)=>{\r\n    let updateToken = (token, username)=>{\r\n        props.updateToken(token, username)\r\n        console.log(\"CALL\")\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"popup-body\" onClick={props.closePopup}>\r\n            </div>\r\n            <div className=\"popup-inside\">\r\n                {\r\n                props.idx ===0 ?\r\n                <Test updateToken={updateToken} className=\"inner\"></Test>\r\n                : <Register></Register>\r\n                }\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TestPopup","import React from 'react'\r\nimport logo from '../public/logo/danny_logo.png'\r\nimport './Header.scss'\r\nimport cookies from 'react-cookies'\r\nconst Header = (props)=>{\r\n    \r\n    const login = ()=>{ \r\n        props.press(0)\r\n    }\r\n    const register = ()=>{ props.press(1)}\r\n\r\n    let removeCookie = ()=>{\r\n        cookies.remove('userdata')\r\n        props.updateToken(false, null)\r\n    }\r\n\r\n    return (\r\n        <div className=\"Header-HeaderTop\">\r\n            <img src={logo} className=\"topLogo\" alt=\"logo\"/>\r\n            <ul className=\"sideLeft\">\r\n                <li><a href=\"/\">메인페이지</a></li>\r\n                <li><a href=\"/problems\">문제목록</a></li>\r\n                {cookies.load('userdata') != null && cookies.load('userdata').rank === 1 ? <li><a href=\"/admin\">관리자페이지</a></li> : <li></li>} \r\n            </ul>\r\n            {props.hasToken ? \r\n                <ul className=\"sideRight\">\r\n                    <li><a href='#' onClick={removeCookie}>Welcome, {props.username}</a></li>\r\n                </ul>\r\n            :\r\n            <ul className=\"sideRight\">\r\n                <li><a href=\"#\" onClick={login}>로그인</a></li>\r\n                <li><a href=\"#\" onClick={register}>회원가입</a></li>\r\n            </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import axios from 'axios'\r\nimport cookies from 'react-cookies'\r\nlet obj = {}\r\naxios.defaults.headers.common[\"authorization\"] = cookies.load('userdata') == null ? '' : cookies.load('userdata').token\r\naxios.interceptors.request.use(\r\n    config => {\r\n        if(cookies.load('userdata') != null) config.headers['authorization'] = cookies.load('userdata').token\r\n        \r\n        return config\r\n    },\r\n    error=>{\r\n        Promise.reject(error)\r\n    }\r\n)\r\naxios.interceptors.response.use(config =>{\r\n    return config;\r\n}, err=> {\r\n    const orq = err.config\r\n    if(err.response.status == 401 && !orq._retry){\r\n        orq._retry = true\r\n        return axios.post(\r\n            'http://danny-server.kro.kr:5000/user/refresh',\r\n            {\r\n                id: cookies.load('userdata').id,\r\n                refreshToken: cookies.load('userdata').refresh\r\n            }\r\n        ).then(dat =>{\r\n            if(dat.status === 200){\r\n                let userdata = cookies.load('userdata')\r\n                userdata.token = dat.data.data.token\r\n                cookies.save('userdata', userdata, {path:'/'})\r\n                axios.defaults.headers.common[\"authorization\"] = userdata.token\r\n                return axios(orq)\r\n            }\r\n        })\r\n    }\r\n    return Promise.reject(err)\r\n})\r\nobj.requestPost = async(url, data)=>{\r\n    let cfg = {\r\n        url: url,\r\n        method: 'post',\r\n        data: data\r\n    }\r\n    return await axios(cfg).catch(err=>{\r\n        cfg.headers = {\r\n            'Content-type':'application/json',\r\n            'authorization': cookies.load('userdata').token\r\n        }\r\n        return (err.config.ret) ? \r\n         axios(cfg) : Promise.reject(err)\r\n    })\r\n}\r\nobj.requestGet=async (bol, url)=>{\r\n    if(bol === true){\r\n        return axios({\r\n            url: url,\r\n            method: 'get'\r\n        });\r\n    } \r\n    else{\r\n        let cfg = {\r\n            url: url,\r\n            method: 'get'\r\n        }\r\n        return await axios(cfg).catch(err=> {\r\n            console.log(err.config.ret)\r\n            cfg.headers = {\r\n                'Content-type':'application/json',\r\n                'authorization': cookies.load('userdata').token\r\n            }\r\n            return (err.config.ret) ? \r\n             axios(cfg) : Promise.reject(err)\r\n        })\r\n    }\r\n}\r\nexport default obj","import React, { useState, useEffect} from 'react'\r\n\r\nimport Http from '../../api'\r\n\r\nimport './Board.scss'\r\n\r\nconst Board = (props)=>{\r\n    let title = props.title\r\n    let type = props.type\r\n    let page = props.page != null ? props.page : 1 //Default is 1\r\n\r\n    let width = props.width\r\n    \r\n    let [posts, setPosts] = useState({\r\n        posts: []\r\n    })\r\n\r\n    useEffect( () => {\r\n        async function getData() {\r\n            if(type === 'problems'){\r\n                await Http.requestGet(false, 'http://danny-server.kro.kr:5000/board/getProblemsByLim/' + props.limit + '/' + (props.page - 1)).then(rw=>{\r\n                    console.log(rw)\r\n                    setPosts({posts: rw.data})\r\n                }).catch(err => console.log(err))\r\n            }else{\r\n                await Http.requestGet(false, 'http://danny-server.kro.kr:5000/board/getTypePost/' + type + '/7').then(rw=>{\r\n                    console.log(rw)\r\n                    setPosts({posts: rw.data})\r\n                }).catch(err => console.log(err))\r\n            }\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Board\">\r\n            <h1>{title}</h1>\r\n            <div className=\"inner\">\r\n                <ul>\r\n                    {\r\n                        type === 'problems'?\r\n                            posts.posts.length > 0 ? posts.posts.map((p) => (\r\n                                <li key={p.id}>\r\n                                    <a href={\"/problem/\" + p.id} className=\"lft\">{p.name}</a>\r\n                                </li>\r\n                            \r\n                                \r\n                            )) :\r\n                            <li>\r\n                                <div className=\"noData\">\r\n                                    <a href=\"#\">게시물이 없습니다.</a>\r\n                                </div>\r\n                            </li>\r\n                        :\r\n                            posts.posts.length > 0 ? posts.posts.map((p) => (\r\n                                <li key={p.id}>\r\n                                    <a href={\"/boards/\" + p.id} className=\"lft\">{p.title}</a>\r\n                                </li>\r\n                            \r\n                                \r\n                            )) :\r\n                            <li>\r\n                                <div className=\"noData\">\r\n                                    <a href=\"#\">게시물이 없습니다.</a>\r\n                                </div>\r\n                            </li>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport Board from '../Board/Board'\r\nimport './Home.scss'\r\nconst Home = (props)=>{\r\n    return(\r\n        <div>\r\n            <h1>HOME!</h1>\r\n            <div className=\"contents\">\r\n                <div className=\"Home-cards\">\r\n                    <Board className=\"inner_card\" width={800} title=\"공지사항\" type=\"acco\" page={1}/> \r\n                    <Board className=\"inner_card\" width={800} title=\"문제목록들\" type=\"problems\" page={1}  page={1} limit={20}/> \r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\n\r\nconst problems = (props)=>{\r\n    return(\r\n        <div>\r\n            <h1>Problems!</h1>\r\n        </div>\r\n    )\r\n}\r\nexport default problems","import React, { useState, useEffect} from 'react'\r\nimport Http from '../../../api'\r\nimport './Board.scss'\r\nconst Board = (props)=>{\r\n\r\n    const [ currentPost, setCurrentPost ] = useState({\r\n        currentPost: {}\r\n    })\r\n    \r\n    useEffect( () => {\r\n        async function getData() {\r\n            const res = await Http.requestGet(false, 'http://danny-server.kro.kr:5000/board/getPost/' + props.match.params.id).then(rw=>{\r\n                setCurrentPost({currentPost: rw.data})\r\n            }).catch(err=>{\r\n            });\r\n            \r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    let obj = currentPost.currentPost\r\n    let title = obj.title\r\n    let contents = obj.contents + ''\r\n    let writer = obj.writer\r\n    let when = (obj.when + '').substring(0, 10)\r\n\r\n    return (\r\n        \r\n        <div className=\"Board_Main\">\r\n            <h1>\r\n                {title}\r\n            </h1>\r\n            <a href={\"/userinfo/:\" + writer}>{writer}</a>\r\n            <p className=\"when\">{when}</p>\r\n            <div className=\"contents\">\r\n                <div className=\"inside\" dangerouslySetInnerHTML={{__html : contents}}>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Board","import Http from '../../../../api'\r\nimport React, { useState, useEffect, Fragment} from 'react'\r\nimport './Problem.scss'\r\nimport cookies from 'react-cookies'\r\nconst Problem = (props)=>{\r\n    const [ currentPost, setCurrentPost ] = useState({\r\n        currentPost: {isCompleted: true}\r\n    })\r\n    \r\n    useEffect( () => {\r\n        async function getData() {\r\n            const res = await Http.requestGet(false, 'http://danny-server.kro.kr:5000/board/getProblems/' + props.match.params.id).then(rw=>{\r\n                console.log(rw.data)\r\n                setCurrentPost({currentPost: rw.data})\r\n                Http.requestGet(false, 'http://danny-server.kro.kr:5000/user/isSolve/' + cookies.load('userdata').username + '/'+ props.match.params.id).then(rwc=>{\r\n                    rw.data.isCompleted = rwc.data.isCompleted;\r\n                    setCurrentPost({currentPost: rw.data})\r\n                }).catch(err=>{})\r\n            }).catch(err=>{\r\n            });\r\n            \r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    let obj = currentPost.currentPost\r\n    let exam = (obj.example + '').toString().split('|');\r\n    return(\r\n        <div className=\"problems\">\r\n            {obj != null ? \r\n                <Fragment>\r\n                    <header>\r\n                        <h1>{obj.id}. {obj.name}</h1>\r\n                        <p>제한시간 : 2초</p>\r\n                        {currentPost.currentPost.isCompleted ? <p>이미 완료했습니다!</p>: <a href={\"/sendPost/\" + obj.id}>제출하기</a>}\r\n                    </header>\r\n                    <div className=\"card\">\r\n                        <div className='header'>\r\n                            설명\r\n                        </div>\r\n                        <div className='inside' dangerouslySetInnerHTML={{__html : obj.introduce}}>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className='header'>\r\n                            입력값\r\n                        </div>\r\n                        <div className='inside'>\r\n                            {obj.input}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className='header'>\r\n                            출력값\r\n                        </div>\r\n                        <div className='inside'>\r\n                            {obj.output}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className='header'>\r\n                            예제\r\n                        </div>\r\n                        <div className='inside'>\r\n                            {exam != null?\r\n                            <Fragment>\r\n                                <div className=\"input\" dangerouslySetInnerHTML={{__html : exam[0]}}></div>\r\n                                <div className=\"output\" dangerouslySetInnerHTML={{__html : exam[1]}}></div>\r\n                            </Fragment>\r\n                            :\r\n                            ''}\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            :\r\n            <header>\r\n                Error\r\n            </header>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Problem","import React, {useState} from 'react'\r\nimport './SendPost.scss'\r\nimport Http from '../../../../api'\r\nimport cookies from 'react-cookies'\r\nconst SendPost = (props) => {\r\n    let [txt, setTxt] = useState({\r\n        value: ''\r\n    })\r\n    let [info, setInfo] = useState({\r\n        value: '제출하지 않음'\r\n    })\r\n    let submit = ()=>{\r\n        console.log(txt.value)\r\n        \r\n        setInfo({value: '제출중...'})\r\n        Http.requestPost('http://danny-server.kro.kr:5000/compiler/write',{\r\n            username: cookies.load('userdata').username,\r\n            id: props.match.params.id,\r\n            code: txt.value\r\n        }).then(rw =>{\r\n            setInfo({value: '컴파일중...'})\r\n            Http.requestGet(false, 'http://danny-server.kro.kr:5000/compiler/' + cookies.load('userdata').username +'/' + props.match.params.id).then(rw=>{\r\n                console.log(rw)\r\n                if(rw.data.score === rw.data.max) alert('완벽합니다!')\r\n                setInfo({value: rw.data.score + \" / \" + rw.data.max})\r\n            })\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"code\">\r\n            <textarea rows=\"20\" cols=\"100\" onChange={event=>setTxt({value:event.target.value})}/><br/>\r\n            <button onClick={submit}>제출하기</button>\r\n            <p>{info.value}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendPost","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport Home from '../Home/Home'\r\nimport Problems from '../Problems/Problems'\r\nimport Board from '../Board/Contents/Board'\r\nimport Problem from '../Board/Contents/Problems/Problem'\r\nimport SendPost from '../Board/Contents/SendPost/SendPost'\r\nconst Contents = (props)=>{\r\n    return (\r\n        <div>\r\n            <Route hasToken={props.hasToken} exact path=\"/\" component={Home}/>\r\n            <Route hasToken={props.hasToken}  exact path=\"/#\" component={Home}/>\r\n            <Route hasToken={props.hasToken}  path=\"/problems/:id\" component={Problems}/>\r\n            <Route hasToken={props.hasToken}  path=\"/boards/:id\" component={Board}/>\r\n            <Route path=\"/problem/:id\" component={Problem}/>\r\n            <Route path=\"/sendPost/:id\" component={SendPost}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Contents","import React, { useState } from 'react';\nimport './App.css';\nimport TestPopup from '../Popup/TestPopup'\n\nimport Header from '../Header/Header'\nimport Contents from '../contents/Contents'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nimport cookies from 'react-cookies'\n\n \nfunction App() {\n  const [ showPopup, setShowPopup ] = useState(\n    {\n      showPopup: false\n    }\n  )\n  const [idx, setIdx ] = useState(\n    {\n      idx: 0\n    }\n  )\n  const [loginInfo, setLoginInfo] = useState(\n    {\n      hasCookie: cookies.load('userdata') == null ? false : true,\n      username: cookies.load('userdata') == null ? '' : cookies.load('userdata').username\n    }\n  )\n  let toggle = ()=>{\n    setShowPopup(\n      {\n        showPopup: !showPopup.showPopup\n      }\n    )\n  }\n  let update = (token, username)=>{\n    console.log(\"OK\")\n    toggle()\n    setLoginInfo({\n      hasCookie: token,\n      username: username\n    })\n  }\n  let press = (idx)=>{\n    toggle()\n    setIdx(\n      {\n        idx: idx\n      }\n    )\n  }\n  return (\n    <div className=\"App\">\n      <Header updateToken={update} hasToken={loginInfo.hasCookie} username={loginInfo.hasCookie ? cookies.load('userdata').username : ''} press={press}/>\n      <Contents hasToken={loginInfo.hasCookie}></Contents>\n      {\n        showPopup.showPopup ? <TestPopup updateToken={update} closePopup={toggle} idx={idx.idx}/> : null\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { CookiesProvider } from 'react-cookie'\nimport {BrowserRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n      <CookiesProvider>\n        <Router>\n          <App />\n        </Router>\n      </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}